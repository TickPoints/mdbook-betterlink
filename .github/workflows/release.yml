name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
      - v[0-9]+.*-pre

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, '-pre') }}

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        
      - name: Install musl tools (for musl targets)
        if: contains(matrix.target, 'musl')
        run: sudo apt-get update && sudo apt-get install -y musl-tools musl-dev
      
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}
      
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Prepare assets
        shell: bash
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          BIN_NAME="mdbook-betterlink"
          TARGET=${{ matrix.target }}
          
          if [[ "$TARGET" == *"windows"* ]]; then
            EXT="zip"
            cp target/$TARGET/release/$BIN_NAME.exe $BIN_NAME.exe
            sha256sum $BIN_NAME.exe > $BIN_NAME.exe.sha256
            zip $BIN_NAME-$TAG-$TARGET.zip $BIN_NAME.exe $BIN_NAME.exe.sha256
            ASSET_PATH=$BIN_NAME-$TAG-$TARGET.zip
          else
            EXT="tar.gz"
            cp target/$TARGET/release/$BIN_NAME $BIN_NAME
            sha256sum $BIN_NAME > $BIN_NAME.sha256
            tar czf $BIN_NAME-$TAG-$TARGET.tar.gz $BIN_NAME $BIN_NAME.sha256
            ASSET_PATH=$BIN_NAME-$TAG-$TARGET.tar.gz
          fi
          
          echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
          echo "CHECKSUM=$(sha256sum $ASSET_PATH | awk '{print $1}')" >> $GITHUB_ENV
      
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_PATH }}
          asset_content_type: application/octet-stream
      
      - name: Generate checksum info
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          echo "### CheckCode" >> checksum.md
          echo "\`\`\`" >> checksum.md
          echo "File: ${{ env.ASSET_PATH }}" >> checksum.md
          echo "SHA256: ${{ env.CHECKSUM }}" >> checksum.md
          echo "\`\`\`" >> checksum.md
      
      - name: Update release notes with checksums
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        uses: actions/github-script@v6
        env:
          RELEASE_ID: ${{ needs.create-release.outputs.id }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const checksumInfo = fs.readFileSync('checksum.md', 'utf8');
            const releaseNotes = `See the [CHANGELOG.md](https://github.com/TickPoints/mdbook-betterlink/blob/main/CHANGELOG.md) for the full update log.\n\n${checksumInfo}`;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.RELEASE_ID,
              body: releaseNotes
            });
